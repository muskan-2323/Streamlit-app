# -*- coding: utf-8 -*-
"""streamlit_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tx-Q5oAR_G67kXoMUKIwmsL29U0iqna9
"""


import xgboost as xgb
import pandas as pd
import streamlit as st
from xgboost import XGBRegressor
import numpy as np
# Streamlit app
st.title('Solar Power Generation Prediction')

# Input fields
wind_direction = st.number_input('Wind Direction')
temperature = st.number_input('Temperature')
wind_speed = st.number_input('Wind Speed')
visibility = st.number_input('Visibility')
humidity = st.number_input('Humidity')
distance_to_solar_noon = st.number_input('Distance to Solar Noon')
sky_cover = st.number_input('Sky Cover')
average_wind_speed_period = st.number_input('Average Wind Speed (Period)')
average_pressure_period = st.number_input('Average Pressure (Period)')

solarpowergeneration = pd.read_csv("solarpowergeneration.csv")

solarpowergeneration = pd.read_csv("solarpowergeneration.csv")
X = solarpowergeneration.iloc[:,:9]
Y = solarpowergeneration.iloc[:,-1]
xgb_model = xgb.XGBRegressor()
xgb_model.fit(X,Y)

# Create input array
input_data = np.array([[wind_direction, temperature, wind_speed, visibility, humidity,
                        distance_to_solar_noon, sky_cover, average_wind_speed_period,
                        average_pressure_period]])

# Make prediction
if st.button('Predict'):
    prediction = xgb_model.predict(input_data)
    st.write('Predicted Power Generation:', prediction[0])